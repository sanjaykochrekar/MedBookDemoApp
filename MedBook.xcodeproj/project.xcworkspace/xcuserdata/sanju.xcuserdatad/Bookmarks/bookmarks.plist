<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>39</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>38</string>
					<key>Timestamp</key>
					<string>717940758.770321</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>MedBook/Util/MBValidation.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // TODO: -  need to add doc comment
</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>    static func getPasswordValidationMessage(_ password: String) -&gt; String? {
        
        if password.count &lt; 8 {
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>20</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>19</string>
					<key>Timestamp</key>
					<string>717940758.77028</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>MedBook/Util/MBValidation.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // TODO: - need add doc comment
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>    static func isValidPassword(_ password: String) -&gt; Bool {
        if password.count &lt; 8 {
            return false
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>13</string>
					<key>StartingColumnNumber</key>
					<string>35</string>
					<key>StartingLineNumber</key>
					<string>12</string>
					<key>Timestamp</key>
					<string>717940765.453557</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>MedBook/Util/MBValidation.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>
</string>
				<key>leading</key>
				<string>struct MBValidation {
    
    // TODO: - need add doc comment</string>
				<key>trailing</key>
				<string>    static func isValidEmail(_ email: String) -&gt; Bool {
        let emailRegEx = "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"
        let emailPred = NSPredicate(format:"SELF MATCHES %@", emailRegEx)
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>28</string>
					<key>EndingLineNumber</key>
					<string>60</string>
					<key>StartingColumnNumber</key>
					<string>27</string>
					<key>StartingLineNumber</key>
					<string>60</string>
					<key>Timestamp</key>
					<string>717940770.924787</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>MedBook/Util/MBValidation.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string> </string>
				<key>leading</key>
				<string>    }
    
    // TODO: - need add doc</string>
				<key>trailing</key>
				<string>comment
    static func containSpecialChar(_ string: String) -&gt; Bool {
        string.range(of: ".*[^A-Za-z0-9].*", options: .regularExpression) != nil
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>19</string>
					<key>EndingLineNumber</key>
					<string>65</string>
					<key>StartingColumnNumber</key>
					<string>15</string>
					<key>StartingLineNumber</key>
					<string>65</string>
					<key>Timestamp</key>
					<string>717940776.587727</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>MedBook/Util/MBValidation.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>need</string>
				<key>leading</key>
				<string>    }
    
    // TODO: - </string>
				<key>trailing</key>
				<string> add doc comment
    static func containUpperCase(_ string: String) -&gt; Bool {
        (string.range(of: ".*[A-Z]+.*", options: .regularExpression) != nil)
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
